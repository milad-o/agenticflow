[build-system]
requires = ["hatchling>=1.21.0"]
build-backend = "hatchling.build"

[project]
name = "agenticflow"
version = "0.1.0a0"
description = "AgenticFlow V2 foundation: event-sourced, FSM-based multi-agent framework (Phase 1 scaffold)"
authors = [ { name = "AgenticFlow Team" } ]
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.11"
keywords = ["ai", "agents", "multi-agent", "orchestration", "event-sourcing", "fsm", "observability"]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Software Development :: Libraries :: Python Modules",
]

# Keep runtime deps minimal for Phase 1 scaffold
dependencies = [
  "structlog>=23.1.0",
  "typing-extensions>=4.5.0"
]

[project.optional-dependencies]
dev = [
  "pytest>=7.4.0",
  "pytest-asyncio>=0.21.0",
  "hypothesis>=6.80.0",
  "black>=23.7.0",
  "ruff>=0.0.285",
  "mypy>=1.5.0",
  "pre-commit>=3.5.0"
]

[tool.hatch.build.targets.wheel]
packages = ["agenticflow"]

[tool.black]
line-length = 100

[tool.ruff]
line-length = 100
select = ["E", "F", "I"]

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"
addopts = ["-ra"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
show_error_codes = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
